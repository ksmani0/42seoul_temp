apiVersion: v1
kind: Service
metadata:
  name: nginx #nginx-service
  annotations: #Set the same IP of the service using metallb.
    metallb.universe.tf/allow-shared-ip: shared #chaged from "shared"
  labels:
    app: nginx
spec:
  type: LoadBalancer
  loadBalancerIP: MINI_IP #mini_ip(must be entered in uppercase)
  selector:
    app: nginx
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: ssh
      port: 22
      protocol: TCP
      targetPort: 22

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx #nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels: #Label information to find
      app: nginx
  strategy:
    rollingUpdate: #Rollback settings
      maxSurge: 25% #Number of additional Pod Instances used during deployment.
      maxUnavailable: 25%
    type: RollingUpdate
  template: #If there is no label pot above, create a pot by following the instructions below.
    metadata:
      name: nginx #nginx-pod
      labels:
        app: nginx
    spec:
      containers: #Container setting in pod
        - image: nginx
          imagePullPolicy: Never #Assume that the image exists locally. Do not try to pull the image.
          name: nginx #nginx-container
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 22
          livenessProbe: #Check that the pod is working and restart if it doesn't.
            tcpSocket:
              port: 22 #Only sshd is monitored so that pod restarts even if sshd as well as nginx dies.
            initialDelaySeconds: 120 #Check after the first 5->10 seconds.
            periodSeconds: 3 #Check every 3 seconds.
#TCP probe to determine whether the container is operating normally.


####################
#apiVersion: v1
#kind: Secret
#metadata:
#  name: ssh-secret
#stringData:
#  username: seungmki #SSH_USERNAME
#  password: "1234" #SSH_PASSWORD

#---
#          env: #Environment variables fetched from seceret above
#            - name: SSH_USERNAME
#              valueFrom:
#                secretKeyRef:
#                  name: ssh-secret
#                  key: username
#            - name: SSH_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: ssh-secret
#                  key: password

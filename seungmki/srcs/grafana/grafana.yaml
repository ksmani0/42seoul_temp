apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: shared
  name: grafana-services
  labels:
    app: grafana
spec:
  type: LoadBalancer
  loadBalancerIP: MINI_IP #mini_ip(must be entered in uppercase)
  selector:
    app: grafana
  ports:
  - port: 3000
    name: grafana
    protocol: TCP
    targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana #grafana-deployment
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana #grafana-pod
        image: grafana
        imagePullPolicy: Never
        volumeMounts:
        - name: grafana-config
          mountPath: /usr/share/grafana/conf/custom.ini
          subPath: custom.ini
        - name: provisioning
          mountPath: /usr/share/grafana/conf/provisioning
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
          items:
          - key: custom.ini
            path: custom.ini
      - name: provisioning
        configMap:
          name: grafana-config
          items:
          - key: dashboards.yml
            path: dashboards/dashboards.yml
          - key: datasources.yml
            path: datasources/datasources.yml

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  custom.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s/
    [auth.proxy]
    enabled = false
    header_name = X-WEBAUTH-USER
    header_property = username
    auto_sign_up = true
    sync_ttl = 60
    whitelist =
    headers =
    enable_login_token = false
  datasources.yml: | #The yaml files in the datasource and dashboards folders are declared here. datasource.yaml automates DB integration.
    apiVersion: 1
    datasources:
    - name: InfluxDB
      type: influxdb
      access: proxy
      database: telegraf
      isDefault: true
      user: admin
      password: admin
      url: http://influxdb:8086
  dashboards.yml: | #dashboards.yaml tells where the created dashboard is.
    apiVersion: 1
    providers:
    - name: 'influxdb'
      orgId: 1
      folder: ''
      folderUid: ''
      type: file
      disableDeletion: false
      editable: true
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /usr/share/grafana/public/dashboards
#When grafana starts, it looks at datasource.yaml and integrates the DB,
#then goes to the location taught by dashboards.yaml to find and
#visualize dashboards made in json format.
